// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package styling

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// Elements which are hard-coded and not designed to use a lot
// Any color change is manual
func AnimatedText(text string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"animtext\"><svg width=\"100%\" height=\"100%\"><text x=\"50%\" y=\"70%\" text-anchor=\"middle\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(text)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/styling/styled-elements.templ`, Line: 10, Col: 21}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</text></svg></div><style>\n        @import url('https://fonts.googleapis.com/css2?family=Comic+Relief:wght@400;700&family=Lora:ital,wght@0,400..700;1,400..700&family=Quicksand:wght@300..700&display=swap');\n        body {\n            margin: 0;\n        }\n        .animtext {\n            width: 95vw;\n        }\n        svg text {\n            font-family: Comic Relief;\n            letter-spacing: 10px;\n            stroke: #6a942f;\n            font-size: 100px;\n            font-weight: 700;\n            stroke-width: 3;\n            animation: textAnimate 8s infinite alternate;\n        }\n        @keyframes textAnimate {\n            0% {\n                stroke-dasharray: 0 50%;\n                stroke-dashoffset: 20%;\n                fill:hsl(209, 35%, 36%);\n            }\n            100% {\n                stroke-dasharray: 50% 0;\n                stroke-dashoffset: -20%;\n                fill: hsla(205.8, 45.87%, 42.75%, 0%);\n            }\n        }\n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func NoiseEffect() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"noise\"></div><style>\n        .noise {\n            background-image:url(\"https://upload.wikimedia.org/wikipedia/commons/7/76/1k_Dissolve_Noise_Texture.png\");\n            height: 300%;\n            width: 300%\n        }\n\n        .noise::after{\n        content: \"\";\n        background-position: center;\n        background-image:url(\"https://upload.wikimedia.org/wikipedia/commons/7/76/1k_Dissolve_Noise_Texture.png\");\n        height: 300%;\n        width: 300%;\n        position: fixed;\n        opacity:0.05;\n        z-index: -1;\n        animation: animateGrain 8s steps(10) infinite;\n        }\n\n        @keyframes animateGrain{\n        0%, 100% { transform:translate(0, 0) }\n        10%{\n            transform:translate(-5%,-10%)\n        }\n        20%{\n            transform:translate(-15%,-20%)\n        }\n        30%{\n            transform:translate(-5%,-10%)\n        }\n        40%{\n            transform:translate(-15%,-20%)\n        }\n        \n        50%{\n            transform:translate(-5%,-10%)\n        }\n        60%{\n            transform:translate(-15%,-20%)\n        }\n        70%{\n            transform:translate(-5%,-10%)\n        }\n        80%{\n            transform:translate(-15%,-20%)\n        }\n        90%{\n            transform:translate(-5%,-10%)\n        }\n        100%{\n            transform:translate(-15%,-20%)\n        }\n        \n        }\n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
